/**********************************************************
 * This script handles all the events on the contacts page 
 **********************************************************/

var contactScroller;
var contactPageInitialized = false;
var debugContacts = false;

function initializeContactPage() {
	if (contactPageInitialized)
		return;
	contactPageInitialized=true;
	
	$(window).resize(function() {
		if (contactScroller!=undefined)
			contactScroller.refresh();
	});
	
	initContacts();
}

function initContacts() {
	if (isOpen==false) {
		setTimeout(initContacts,10);
		return;
	}
	fillContactList();
	updateFavorites();
	
	setTimeout(function() {
		contactScroller = new iScroll('contactswrapper',{
			snap: false,
			momentum: true,
			hScrollbar: false,
			vScrollbar: true });
	},200);
}
		
function fillContactList() {
	clearContacts();
	
	getContacts(function(result) {
		for(var i=0;i<result.length;i++)
			addContact(result[i],"img/default.png");
	});
}
	
function contactScreenLoaded() {
	contactScroller = new iScroll('contactswrapper');
	setTimeout(function() { contactScroller.refresh(); },200);
}

document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);
document.addEventListener('DOMContentLoaded', function () { initializeContactPage(); }, false);

/****************************************************
 * Functions for managing the favorites.
 ****************************************************/

var favoriteNames = new Array();
var favoriteSelectedArray = new Array(false, false, false);
var favoriteValidArray = new Array(false, false, false);

function updateFavorites() {
	favoriteNames = new Array();
	
	getContactsSorted(function(result) {
		for(var i=0;i<Math.min(result.length,3);i++) {
			var elementName = "contacts-favorite"+(i+1);
			document.getElementById(elementName).setAttribute("name",result[i]);
			document.getElementById(elementName).setAttribute("class","contacts-favorite-image");
			var elementName = "contacts-favorite"+(i+1)+"-text";
			document.getElementById(elementName).innerHTML = result[i];
			favoriteNames[i]=result[i];
			favoriteValidArray[i]=true;
			favoriteSelectedArray[i]=false;
		}
		
		for(var i=Math.min(result.length,3);i<3;i++) {
			var elementName = "contacts-favorite"+(i+1);
			document.getElementById(elementName).innerHTML = "?";
			document.getElementById(elementName).setAttribute("class","contacts-favorite-image");
			favoriteValidArray[i]=false;
			favoriteSelectedArray[i]=false;
		}
	});
}

function highLightFavoriteByName(name) {
	for(var i=0;i<favoriteNames.length;i++)
		if (favoriteNames[i]==name&&favoriteValidArray[i]) {
			favoriteSelectedArray[i]=true;
			document.getElementById("contacts-favorite"+(i+1)).setAttribute("class","contacts-favorite-image-selected");			
		}
}

function unHighLightFavoriteByName(name) {
	for(var i=0;i<favoriteNames.length;i++)
		if (favoriteNames[i]==name&&favoriteSelectedArray[i]) {
			favoriteSelectedArray[i]=false;
			document.getElementById("contacts-favorite"+(i+1)).setAttribute("class","contacts-favorite-image");		
		}
}

function onClickFavorite(favoriteId, index) {
	if (!favoriteValidArray[index])
		return;
	favoriteSelectedArray[index] = !favoriteSelectedArray[index];
	
	if (favoriteSelectedArray[index])
		document.getElementById(favoriteId).setAttribute("class","contacts-favorite-image-selected");
	else
		document.getElementById(favoriteId).setAttribute("class","contacts-favorite-image");
		
	adaptCheckBox(favoriteNames[index],favoriteSelectedArray[index]);
}

/****************************************************
 * Functions for adding/removing/accessing contacts 
 ****************************************************/

var count=0; // Number of loaded contacts
var contactCheckedArray = []; // Array to check which contacts are checked.
var contactNameList = [];

/*
 * Removes all the contacts.
 */
function clearContacts() {
	$("#contactslist").empty();
	count = 0;
	contactCheckedArray = [];
}

/*
 * Add's a contact with a given name.
 */
function addContact(name, image) {
	var appendString = 	'<div id = "contact'+count+'" count = "'+count+'" name="'+name+'" class = "contactentry-wrapper" onclick=clickedContact("contact'+count+'")>'+
								'<div id="contact'+count+'imagewrapper" class = "contactsentry-image">' +
									'<img id="contact'+count+'image" src="'+image+'"/>' +
								'</div>' +
								'<div id="contact'+count+'name" class = "contactsentry-text">'+
									name +
								'</div>'+
								'<div id="contact'+count+'checkbox" class = "contactsentry-checkbox">'+
									'<img id="contact'+count+'checkboximage" src="img/clear.gif"/>' +
								'</div>'
							"</div>";
	contactCheckedArray[count]=false;	
	contactNameList[count]=name;
	count++;
	$("#contactslist").append(appendString);
	if (contactScroller!=undefined)
		contactScroller.refresh();
}

/*
 *
 */
function getCheckedNamesInArray() {
	var result = new Array();
	
	for(var i=0;i<contactCheckedArray.length;++i)
		if (contactCheckedArray[i])
			result.push(contactNameList[i]);
	return result;
}

/*
 *
 */
function adaptCheckBox(name, marked) {
	for(var i=0;i<contactNameList.length;i++) {
		if (contactNameList[i]==name) {
			var contactId = "contact"+i;
			if (marked) 
				document.getElementById(contactId+'checkboximage').src='img/check-mark.gif';
			else
				document.getElementById(contactId+'checkboximage').src="img/clear.gif";
			contactCheckedArray[i]=marked;
		}
	}
}

/*
 *
 */
function clickedContact(contactId) {
	var contactDiv = document.getElementById(contactId);
	var c = contactDiv.getAttribute("count");
	
	if (contactCheckedArray[c]==false) {
		document.getElementById(contactId+'checkboximage').src='img/check-mark.gif';
		highLightFavoriteByName(contactDiv.getAttribute("name"));
	}
	else {
		document.getElementById(contactId+'checkboximage').src="img/clear.gif";
		unHighLightFavoriteByName(contactDiv.getAttribute("name"));
	}
	contactCheckedArray[c]=!contactCheckedArray[c];
	
	getCheckedNamesInArray();
}

/******************************************
 * Functions for loading the contact list
 ******************************************/
 
function continueClicked() {
	var currentFriends = getCheckedNamesInArray();
			
	if (currentEmotion!=undefined&&currentEmotion!=null
		&& currentActivity!=undefined&&currentActivity!=null) {
		
		insertEmotion(currentEmotion,currentActivity,currentFriends, function() {
			if (debugContacts)
				console.log("[contacts.js]@continueClicked: succesfully added record in database");
			currentEmotion = null;
			currentActivity = null;
			
			for(var i=0;i<currentFriends.length;i++)
				updateCountOfContact(currentFriends[i]);
			
			fillContactList();
			updateFavorites();
			
			$.mobile.changePage('index.html#startpage', {
				transition : "slide",
				reverse : true
			}, true, true);
		},function() {
			if (debugContacts)
				console.log("[contacts.js]@continueClicked: failed to insert data into database");
			$.mobile.changePage('index.html#startpage', {
				transition : "slide",
				reverse : true
			}, true, true);
		});
	}
	else
		if (debugContacts)
				console.log("[contacts.js]@continueClicked: some of the data was nul!");
			$.mobile.changePage('index.html#startpage', {
				transition : "slide",
				reverse : true
			}, true, true);

}

function addContactClicked() {
	$.mobile.changePage('index.html#addcontactform', {
		transition : "slideup",
		reverse : true
	}, true, true);
}

function addContactFormClicked() {
	// Get the name of the new activity.
	firstName = document.getElementById("form_firstname").value;
	lastName = document.getElementById("form_lastname").value;
	
	if (firstName=="" && lastName=="")
		console.log("Failed to add empty activity");
	else
		insertContact(firstName,lastName,function(result) {
			if (debugContacts) {
				if (result)
					console.log("[contacts.js]@addContactFormClicked: adding the new contact with name: "+firstName+" "+lastName+" was succesful");
				else
					console.log("[contacts.js]@addContactFormClicked: adding the new contact with name: "+firstName+" "+lastName+" failed");
			}
			
			if (result)  {
				fillContactList();
				updateFavorites();
			}
			
			/*
			 * Go back to the activity page.
			 */
			$.mobile.changePage('index.html#contacts', {
				transition : "slide",
				reverse : false
			}, true, true);
		});
}
